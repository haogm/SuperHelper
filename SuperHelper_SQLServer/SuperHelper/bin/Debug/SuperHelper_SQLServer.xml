<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperHelper_SQLServer</name>
    </assembly>
    <members>
        <member name="T:SuperHelper_SQLServer.BaseMethods">
            <summary>
            BaseMethods类，只限SuperHelper_SQLServer内部使用，
            这里定义的主要是为SH_Query以及SH_NonQuery类提供基础服务的方法
            </summary>
        </member>
        <member name="M:SuperHelper_SQLServer.BaseMethods.BaseMethod_ParamProcessed(System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            SuperHelper_SQLServer内部方法，
            根据sql语句、object类型List参数集合，生成含有该sql语句中所有参数以及对应的值的SqlParameter[]数组
            </summary>
            <param name="sql">sql语句</param>
            <param name="pam_obj">object类型List参数集合</param>
            <returns>根据sql语句生成的SqlParameter[]数组</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.BaseMethods.GetParamType(System.Type)">
            <summary>
            SuperHelper_SQLServer内部方法，
            根据泛型类型参数type获取其ParamType的类型
            </summary>
            <param name="type">泛型类型参数</param>
            <returns>ParamType的枚举类型</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.BaseMethods.GetConstr">
            <summary>
            SuperHelper_SQLServer内部方法；
            返回Name属性为HelperVar类中conStrName字段值的数据库连接字符串
            </summary>
            <returns>数据库连接字符串</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.BaseMethods.GetConstr(System.String)">
            <summary>
            SuperHelper_SQLServer内部方法；
            根据参数查找相应Name属性值的连接字符串，并返回
            </summary>
            <param name="conStrName">表示要返回的连接字符串的Name属性值</param>
            <returns>数据库连接字符串</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.BaseMethods.GetUserClassMemberValue(System.Type,System.String,System.Object)">
            <summary>
            SuperHelper_SQLServer内部方法，
            根据某类型对象的泛型类型，用户自定义class类型的公共成员名对该类某个公共成员进行赋值，并返回该成员类型的对象
            </summary>
            <param name="type">某类型对象的泛型类型，该泛型类型的对象含有需要赋值的class类型的属性</param>
            <param name="userClassMemberName">需要赋值的class类型的公共成员名称，如："A.Name"，A是上述type类型对象的公共成员之一，Name则是A类型对象的公共成员</param>
            <param name="userClassMemberValue">需要赋给指定成员的值，如："A.Name"，userClassMemberValue就是要赋给A对象的成员Name的值</param>
            <returns>已被赋值的class类型的公共成员对象，如："A.Name"，则返回A类型对象</returns>
        </member>
        <member name="T:SuperHelper_SQLServer.CommandType">
            <summary>
            SuperHelper内部使用的枚举类型，
            表示执行访问数据库命令的方式：存储过程、sql语句
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.CommandType.StoredProcedure">
            <summary>
            使用存储过程执行访问数据库
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.CommandType.Sql">
            <summary>
            使用sql语句执行访问数据库
            </summary>
        </member>
        <member name="T:SuperHelper_SQLServer.HelperVar">
            <summary>
            在HelperVar类里，定义了一些全局的字段或属性
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.HelperVar.DLL_Name">
            <summary>
            内部使用的字段；
            用于存储本组件的名称
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.HelperVar.conStrName">
            <summary>
            内部使用的字段；
            用于存储解决方案config文件中数据库连接字符串的Name属性的值，默认为SuperHelper_SQLServer
            </summary>
        </member>
        <member name="T:SuperHelper_SQLServer.ParamType">
            <summary>
            SuperHelper_SQLServer内部使用的枚举类型，
            表示某参数的类型，主要用于区分用户自定义的class类型和其他系统提供的类型
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.ParamType.UserClass">
            <summary>
            用户自定义的class类型
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.ParamType.String">
            <summary>
            系统提供的字符串类型
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.ParamType.OtherSysClass">
            <summary>
            系统提供的其他的类类型
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.ParamType.SysValue">
            <summary>
            系统提供的值类型
            </summary>
        </member>
        <member name="F:SuperHelper_SQLServer.ParamType.UnKown">
            <summary>
            未知类型
            </summary>
        </member>
        <member name="T:SuperHelper_SQLServer.SH_NonQuery">
            <summary>
            SH_NonQuery类，包含了一些对数据库进行非查询操作的方法
            </summary>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.ExecuteNonQuery(System.String,System.String,SuperHelper_SQLServer.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            SuperHelper_SQLServer内部方法；
            根据数据库连接字符串、存储过程名称或者sql语句、访问数据库的方式以及SqlParameter数组，执行访问数据库操作；
            并返回受影响行数
            </summary>
            <param name="connStr">数据库连接字符串</param>
            <param name="nonQueryStr">表示存储过程名称/sql语句的字符串</param>
            <param name="commandType">表示执行访问数据库的方式</param>
            <param name="param">可变的SqlParameter参数数组</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountBySql(System.String)">
            <summary>
            根据sql语句，访问数据库并执行非查询操作，返回受影响行数
            </summary>
            <param name="sql">SQL语句（非查询命令；多语句情况下最后一句必须是非查询命令）</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountBySql(System.String,System.String)">
            <summary>
            根据指定的数据库连接字符串、sql语句，访问数据库并执行非查询操作，返回受影响行数
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="sql">SQL语句（非查询命令；多语句情况下最后一句必须是非查询命令）</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountByProc(System.String)">
            <summary>
            根据存储过程名称，访问数据库并执行非查询操作，返回受影响行数；
            </summary>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountByProc(System.String,System.String)">
            <summary>
            根据指定的数据库连接字符串、存储过程名称，访问数据库并执行非查询操作，返回受影响行数；
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountBySql(System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            根据sql语句，object类型List参数集合，访问数据库并执行非查询操作，返回受影响行数；
            注意：sql语句中的参数名要与pam_obj集合中开发者自定义class类型对象中的公共属性或公共字段名称保持一致
            </summary>
            <param name="sql">SQL语句（非查询命令；多语句情况下最后一句必须是非查询命令）</param>
            <param name="pam_obj">object类型List参数集合，集合中可以有开发者自定义class类型对象或系统定义的值类型</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountBySql(System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            根据指定的数据库连接字符串、sql语句，object类型List参数集合，访问数据库并执行非查询操作，返回受影响行数；
            注意：sql语句中的参数名要与pam_obj集合中开发者自定义class类型对象中的公共属性或公共字段名称保持一致
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="sql">SQL语句（非查询命令；多语句情况下最后一句必须是非查询命令）</param>
            <param name="pam_obj">object类型List参数集合，集合中可以有开发者自定义class类型对象或系统定义的值类型</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            根据存储过程名称、字典类型的参数列表，访问数据库并执行非查询操作，返回受影响行数
            </summary>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <param name="dic_pam">字典类型的参数集合dic_pam，key对应的是存储过程proc中所需的参数名称，value是参数对应的值</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_NonQuery.GetRowCountByProc(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            根据指定的数据库连接字符串、存储过程名称、字典类型的参数列表，访问数据库并执行非查询操作，返回受影响行数
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <param name="dic_pam">字典类型的参数集合dic_pam，key对应的是存储过程proc中所需的参数名称，value是参数对应的值</param>
            <returns>执行非查询操作后的受影响行数</returns>
        </member>
        <member name="T:SuperHelper_SQLServer.SH_Query`1">
            <summary>
            SH_Query泛型类，包含了一些对数据库进行查询操作的方法
            </summary>
            <typeparam name="T">查询数据库后返回结果集</typeparam>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.ExecuteQuery(System.String,System.String,SuperHelper_SQLServer.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            SuperHelper_SQLServer内部方法；
            根据存储过程名称或者sql语句、访问数据库的方式以及SqlParameter数组，执行访问数据库操作，
            并返回T类型的List集合
            </summary>
            <param name="connStr">数据库连接字符串</param>
            <param name="queryStr">表示存储过程名称/sql语句的字符串</param>
            <param name="commandType">表示执行访问数据库的方式</param>
            <param name="param">可变的SqlParameter参数数组</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListBySql(System.String)">
            <summary>
            根据无参数的sql语句，查询数据库并返回指定T类型的List集合。
            注意：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行sql语句后返回的查询结果集中的列名保持一致
            </summary>
            <param name="sql">SQL语句（查询命令；多语句情况下最后一句必须是查询命令）</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListBySql(System.String,System.String)">
            <summary>
            根据指定的数据库连接字符串、无参数的sql语句，查询数据库并返回指定T类型的List集合。
            注意：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行sql语句后返回的查询结果集中的列名保持一致
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="sql">SQL语句（查询命令；多语句情况下最后一句必须是查询命令）</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListByProc(System.String)">
            <summary>
            根据无参数的存储过程，查询数据库并返回指定T类型的集合。
            注意：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行存储过程后返回的查询结果集中的列名保持一致
            </summary>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListByProc(System.String,System.String)">
            <summary>
            根据指定的数据库连接字符串、无参数的存储过程，查询数据库并返回指定T类型的集合。
            注意：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行存储过程后返回的查询结果集中的列名保持一致
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListBySql(System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            根据sql语句，object类型List参数集合，查询数据库并返回指定T类型的List集合；
            注意1：sql语句中的参数名要与pam_obj集合中开发者自定义class类型对象中的公共属性或公共字段名称保持一致；
            注意2：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行sql语句后返回的查询结果集中的列名保持一致
            </summary>
            <param name="sql">SQL语句（查询命令；多语句情况下最后一句必须是查询命令）</param>
            <param name="pam_obj">object类型List参数集合，集合中可以有开发者自定义class类型对象或系统定义的值类型</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListBySql(System.String,System.String,System.Collections.Generic.List{System.Object})">
            <summary>
            根据指定的数据库连接字符串、sql语句、object类型List参数集合，查询数据库并返回指定T类型的List集合；
            注意1：sql语句中的参数名要与pam_obj集合中开发者自定义class类型对象中的公共属性或公共字段名称保持一致；
            注意2：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行sql语句后返回的查询结果集中的列名保持一致
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="sql">SQL语句（查询命令；多语句情况下最后一句必须是查询命令）</param>
            <param name="pam_obj">object类型List参数集合，集合中可以有开发者自定义class类型对象或系统定义的值类型</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListByProc(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            根据存储过程名称、字典类型的参数列表，查询数据库并返回指定T类型的集合；
            注意：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行存储过程后返回的查询结果集中的列名保持一致
            </summary>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <param name="dic_pam">字典类型的参数集合dic_pam，key对应的是存储过程proc中所需的参数名称，value是参数对应的值</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
        <member name="M:SuperHelper_SQLServer.SH_Query`1.GetListByProc(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            根据指定的数据库连接字符串、存储过程名称、字典类型的参数列表，查询数据库并返回指定T类型的集合；
            注意：若T为开发者自定义class类型，则其公共属性或公共字段名称要与执行存储过程后返回的查询结果集中的列名保持一致
            </summary>
            <param name="connStrName">数据库连接字符串的Name属性</param>
            <param name="proc">将要访问的数据库中的存储过程的名称</param>
            <param name="dic_pam">字典类型的参数集合dic_pam，key对应的是存储过程proc中所需的参数名称，value是参数对应的值</param>
            <returns>以T类型的List集合的方式返回查询结果集</returns>
        </member>
    </members>
</doc>
